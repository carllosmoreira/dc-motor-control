

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 18 16:28:03 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0006                     _PORTB	set	6
   212  0007                     _PORTC	set	7
   213  001E                     _ADRESH	set	30
   214  0010                     _T1CON	set	16
   215  000B                     _INTCON	set	11
   216  0015                     _CCPR1L	set	21
   217  0017                     _CCP1CON	set	23
   218  0012                     _T2CON	set	18
   219  001F                     _ADCON0	set	31
   220  000F                     _TMR1H	set	15
   221  000E                     _TMR1L	set	14
   222  000C                     _PIR1	set	12
   223  0086                     _TRISB	set	134
   224  009E                     _ADRESL	set	158
   225  008C                     _PIE1	set	140
   226  0092                     _PR2	set	146
   227  0087                     _TRISC	set	135
   228  0088                     _TRISD	set	136
   229  009F                     _ADCON1	set	159
   230  0085                     _TRISA	set	133
   231  0189                     _ANSELH	set	393
   232  0188                     _ANSEL	set	392
   233                           
   234                           	psect	cinit
   235  0015                     start_initialization:	
   236                           ; #config settings
   237                           
   238  0015                     __initialization:	
   239                           
   240                           ; Clear objects allocated to COMMON
   241  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   242  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   243  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK0
   246  0018  1283               	bcf	3,5	;RP0=0, select bank0
   247  0019  1303               	bcf	3,6	;RP1=0, select bank0
   248  001A  01C0               	clrf	__pbssBANK0& (0+127)
   249  001B  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   250  001C  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   251  001D                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  001D                     __end_of__initialization:	
   255  001D  0183               	clrf	3
   256  001E  120A  118A  293C   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMMON
   259  0076                     __pbssCOMMON:	
   260  0076                     _valor_f:	
   261  0076                     	ds	3
   262                           
   263                           	psect	bssBANK0
   264  0040                     __pbssBANK0:	
   265  0040                     _valor:	
   266  0040                     	ds	2
   267  0042                     _periodic_interrupt:	
   268  0042                     	ds	1
   269                           
   270                           	psect	cstackCOMMON
   271  0070                     __pcstackCOMMON:	
   272  0070                     ?_lcd_init:	
   273  0070                     ?_lcd_cmd:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_ISR:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ??_ISR:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_lcd_data:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290  0070                     	ds	5
   291  0075                     ??___awmod:	
   292  0075                     lcd_cmd@cmd:	
   293                           ; 1 bytes @ 0x5
   294                           
   295                           
   296                           ; 1 bytes @ 0x5
   297  0075                     	ds	1
   298                           
   299                           	psect	cstackBANK0
   300  0020                     __pcstackBANK0:	
   301  0020                     ??_lcd_cmd:	
   302  0020                     ??_lcd_data:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0020                     ?___awmod:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0020                     ___awmod@divisor:	
   309                           ; 2 bytes @ 0x0
   310                           
   311                           
   312                           ; 2 bytes @ 0x0
   313  0020                     	ds	2
   314  0022                     ??_lcd_init:	
   315  0022                     ?_lcd_set_position:	
   316                           ; 1 bytes @ 0x2
   317                           
   318  0022                     lcd_data@low_nibble:	
   319                           ; 1 bytes @ 0x2
   320                           
   321  0022                     lcd_set_position@y:	
   322                           ; 1 bytes @ 0x2
   323                           
   324  0022                     ___awmod@dividend:	
   325                           ; 1 bytes @ 0x2
   326                           
   327                           
   328                           ; 2 bytes @ 0x2
   329  0022                     	ds	1
   330  0023                     ??_lcd_set_position:	
   331  0023                     lcd_data@high_nibble:	
   332                           ; 1 bytes @ 0x3
   333                           
   334                           
   335                           ; 1 bytes @ 0x3
   336  0023                     	ds	1
   337  0024                     lcd_data@data:	
   338  0024                     lcd_set_position@x:	
   339                           ; 1 bytes @ 0x4
   340                           
   341  0024                     ___awmod@counter:	
   342                           ; 1 bytes @ 0x4
   343                           
   344                           
   345                           ; 1 bytes @ 0x4
   346  0024                     	ds	1
   347  0025                     lcd_set_position@pos:	
   348  0025                     ___awmod@sign:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 1 bytes @ 0x5
   353  0025                     	ds	1
   354  0026                     ?___awdiv:	
   355  0026                     ___awdiv@divisor:	
   356                           ; 2 bytes @ 0x6
   357                           
   358                           
   359                           ; 2 bytes @ 0x6
   360  0026                     	ds	2
   361  0028                     ___awdiv@dividend:	
   362                           
   363                           ; 2 bytes @ 0x8
   364  0028                     	ds	2
   365  002A                     ??___awdiv:	
   366                           
   367                           ; 1 bytes @ 0xA
   368  002A                     	ds	1
   369  002B                     ___awdiv@counter:	
   370                           
   371                           ; 1 bytes @ 0xB
   372  002B                     	ds	1
   373  002C                     ___awdiv@sign:	
   374                           
   375                           ; 1 bytes @ 0xC
   376  002C                     	ds	1
   377  002D                     ___awdiv@quotient:	
   378                           
   379                           ; 2 bytes @ 0xD
   380  002D                     	ds	2
   381  002F                     ?_separa:	
   382  002F                     separa@valor:	
   383                           ; 1 bytes @ 0xF
   384                           
   385                           
   386                           ; 2 bytes @ 0xF
   387  002F                     	ds	2
   388  0031                     ??_separa:	
   389                           
   390                           ; 1 bytes @ 0x11
   391  0031                     	ds	1
   392  0032                     separa@milhar:	
   393                           
   394                           ; 2 bytes @ 0x12
   395  0032                     	ds	2
   396  0034                     _separa$484:	
   397                           
   398                           ; 2 bytes @ 0x14
   399  0034                     	ds	2
   400  0036                     separa@centena:	
   401                           
   402                           ; 2 bytes @ 0x16
   403  0036                     	ds	2
   404  0038                     separa@dezena:	
   405                           
   406                           ; 2 bytes @ 0x18
   407  0038                     	ds	2
   408  003A                     separa@unidade:	
   409                           
   410                           ; 2 bytes @ 0x1A
   411  003A                     	ds	2
   412  003C                     _separa$483:	
   413                           
   414                           ; 2 bytes @ 0x1C
   415  003C                     	ds	2
   416  003E                     ??_main:	
   417                           
   418                           ; 1 bytes @ 0x1E
   419  003E                     	ds	2
   420                           
   421                           	psect	maintext
   422  013C                     __pmaintext:	
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 22 in file "C:\Users\Aluno\Desktop\Projeto 6\code\main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : B00/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       2       0       0       0
   445 ;;      Totals:         0       2       0       0       0
   446 ;;Total ram usage:        2 bytes
   447 ;; Hardware stack levels required when called:    4
   448 ;; This function calls:
   449 ;;		_lcd_init
   450 ;;		_separa
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _main
   458  013C                     _main:	
   459                           
   460                           ;main.c: 25: TRISA | = (1<<0);
   461                           
   462                           ;incstack = 0
   463                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   464  013C  1683               	bsf	3,5	;RP0=1, select bank1
   465  013D  1303               	bcf	3,6	;RP1=0, select bank1
   466  013E  1405               	bsf	5,0	;volatile
   467                           
   468                           ;main.c: 26: ANSEL | = (1<<0);
   469  013F  1683               	bsf	3,5	;RP0=1, select bank3
   470  0140  1703               	bsf	3,6	;RP1=1, select bank3
   471  0141  1408               	bsf	8,0	;volatile
   472                           
   473                           ;main.c: 32: ADCON0 =0x00;
   474  0142  1283               	bcf	3,5	;RP0=0, select bank0
   475  0143  1303               	bcf	3,6	;RP1=0, select bank0
   476  0144  019F               	clrf	31	;volatile
   477                           
   478                           ;main.c: 33: ADCON0|= 0b01000001;
   479  0145  3041               	movlw	65
   480  0146  00BE               	movwf	??_main
   481  0147  083E               	movf	??_main,w
   482  0148  049F               	iorwf	31,f	;volatile
   483                           
   484                           ;main.c: 35: ADCON1 = 0;
   485  0149  1683               	bsf	3,5	;RP0=1, select bank1
   486  014A  1303               	bcf	3,6	;RP1=0, select bank1
   487  014B  019F               	clrf	31	;volatile
   488                           
   489                           ;main.c: 36: ADCON1 &= ~(1<<7);
   490  014C  307F               	movlw	127
   491  014D  1283               	bcf	3,5	;RP0=0, select bank0
   492  014E  1303               	bcf	3,6	;RP1=0, select bank0
   493  014F  00BE               	movwf	??_main
   494  0150  083E               	movf	??_main,w
   495  0151  1683               	bsf	3,5	;RP0=1, select bank1
   496  0152  1303               	bcf	3,6	;RP1=0, select bank1
   497  0153  059F               	andwf	31,f	;volatile
   498                           
   499                           ;main.c: 37: TRISD = 0;
   500  0154  0188               	clrf	8	;volatile
   501                           
   502                           ;main.c: 38: TRISC = 0;
   503  0155  0187               	clrf	7	;volatile
   504                           
   505                           ;main.c: 39: _delay((unsigned long)((20)*(4000000/4000.0)));
   506  0156  301A               	movlw	26
   507  0157  1283               	bcf	3,5	;RP0=0, select bank0
   508  0158  1303               	bcf	3,6	;RP1=0, select bank0
   509  0159  00BF               	movwf	??_main+1
   510  015A  30F7               	movlw	247
   511  015B  00BE               	movwf	??_main
   512  015C                     u687:	
   513  015C  0BBE               	decfsz	??_main,f
   514  015D  295C               	goto	u687
   515  015E  0BBF               	decfsz	??_main+1,f
   516  015F  295C               	goto	u687
   517  0160  2961               	nop2
   518                           
   519                           ;main.c: 40: lcd_init();
   520  0161  120A  118A  22FB  120A  118A  	fcall	_lcd_init
   521                           
   522                           ;main.c: 42: TRISC &= ~(1<<2);
   523  0166  30FB               	movlw	251
   524  0167  1283               	bcf	3,5	;RP0=0, select bank0
   525  0168  1303               	bcf	3,6	;RP1=0, select bank0
   526  0169  00BE               	movwf	??_main
   527  016A  083E               	movf	??_main,w
   528  016B  1683               	bsf	3,5	;RP0=1, select bank1
   529  016C  1303               	bcf	3,6	;RP1=0, select bank1
   530  016D  0587               	andwf	7,f	;volatile
   531                           
   532                           ;main.c: 43: T2CON = 0B00000101;
   533  016E  3005               	movlw	5
   534  016F  1283               	bcf	3,5	;RP0=0, select bank0
   535  0170  1303               	bcf	3,6	;RP1=0, select bank0
   536  0171  0092               	movwf	18	;volatile
   537                           
   538                           ;main.c: 44: PR2 = 249;
   539  0172  30F9               	movlw	249
   540  0173  1683               	bsf	3,5	;RP0=1, select bank1
   541  0174  1303               	bcf	3,6	;RP1=0, select bank1
   542  0175  0092               	movwf	18	;volatile
   543                           
   544                           ;main.c: 45: CCP1CON =0B00001100;
   545  0176  300C               	movlw	12
   546  0177  1283               	bcf	3,5	;RP0=0, select bank0
   547  0178  1303               	bcf	3,6	;RP1=0, select bank0
   548  0179  0097               	movwf	23	;volatile
   549                           
   550                           ;main.c: 46: CCPR1L = 500 >> 2;
   551  017A  307D               	movlw	125
   552  017B  0095               	movwf	21	;volatile
   553                           
   554                           ;main.c: 47: TMR1L = 0xEF;
   555  017C  30EF               	movlw	239
   556  017D  008E               	movwf	14	;volatile
   557                           
   558                           ;main.c: 48: TMR1H = 0xD8;
   559  017E  30D8               	movlw	216
   560  017F  008F               	movwf	15	;volatile
   561                           
   562                           ;main.c: 49: INTCON |= (1<<7)| (1<<6);
   563  0180  30C0               	movlw	192
   564  0181  00BE               	movwf	??_main
   565  0182  083E               	movf	??_main,w
   566  0183  048B               	iorwf	11,f	;volatile
   567                           
   568                           ;main.c: 50: PIR1 &= ~(1<<0);
   569  0184  30FE               	movlw	254
   570  0185  00BE               	movwf	??_main
   571  0186  083E               	movf	??_main,w
   572  0187  058C               	andwf	12,f	;volatile
   573                           
   574                           ;main.c: 51: PIE1 |= (1<<0);
   575  0188  1683               	bsf	3,5	;RP0=1, select bank1
   576  0189  1303               	bcf	3,6	;RP1=0, select bank1
   577  018A  140C               	bsf	12,0	;volatile
   578                           
   579                           ;main.c: 54: T1CON = 0B0000001;
   580  018B  3001               	movlw	1
   581  018C  1283               	bcf	3,5	;RP0=0, select bank0
   582  018D  1303               	bcf	3,6	;RP1=0, select bank0
   583  018E  0090               	movwf	16	;volatile
   584  018F                     l1331:	
   585                           ;main.c: 55: while(1){
   586                           
   587                           
   588                           ;main.c: 57: if (periodic_interrupt){
   589  018F  0842               	movf	_periodic_interrupt,w
   590  0190  1903               	btfsc	3,2
   591  0191  298F               	goto	l1331
   592                           
   593                           ;main.c: 58: periodic_interrupt = 0;
   594  0192  01C2               	clrf	_periodic_interrupt
   595                           
   596                           ;main.c: 59: _delay((unsigned long)((5)*(4000000/4000000.0)));
   597  0193  2994               	nop2	;2 cycle nop
   598  0194  2995               	nop2	;2 cycle nop
   599  0195  0000               	nop
   600                           
   601                           ;main.c: 60: ADCON0 |= (1<<1);
   602  0196  1283               	bcf	3,5	;RP0=0, select bank0
   603  0197  1303               	bcf	3,6	;RP1=0, select bank0
   604  0198  149F               	bsf	31,1	;volatile
   605  0199                     l63:	
   606                           ;main.c: 61: while( ADCON0 &(1<<1));
   607                           
   608  0199  189F               	btfsc	31,1	;volatile
   609  019A  2999               	goto	l63
   610                           
   611                           ;main.c: 62: CCPR1L = ADRESH;
   612  019B  081E               	movf	30,w	;volatile
   613  019C  0095               	movwf	21	;volatile
   614                           
   615                           ;main.c: 63: CCP1CON &= 0B11001111;
   616  019D  30CF               	movlw	207
   617  019E  00BE               	movwf	??_main
   618  019F  083E               	movf	??_main,w
   619  01A0  0597               	andwf	23,f	;volatile
   620                           
   621                           ;main.c: 64: CCP1CON != (ADRESL >> 2);
   622  01A1  1683               	bsf	3,5	;RP0=1, select bank1
   623  01A2  1303               	bcf	3,6	;RP1=0, select bank1
   624  01A3  081E               	movf	30,w	;volatile
   625  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   626  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   627  01A6  0817               	movf	23,w	;volatile
   628                           
   629                           ;main.c: 67: separa(valor);
   630  01A7  0841               	movf	_valor+1,w
   631  01A8  00B0               	movwf	separa@valor+1
   632  01A9  0840               	movf	_valor,w
   633  01AA  00AF               	movwf	separa@valor
   634  01AB  120A  118A  2021  120A  118A  	fcall	_separa
   635                           
   636                           ;main.c: 68: PORTC | = (1<<0);
   637  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   638  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   639  01B2  1407               	bsf	7,0	;volatile
   640                           
   641                           ;main.c: 69: PORTC & = ~(1<<1);
   642  01B3  30FD               	movlw	253
   643  01B4  00BE               	movwf	??_main
   644  01B5  083E               	movf	??_main,w
   645  01B6  0587               	andwf	7,f	;volatile
   646  01B7  298F               	goto	l1331
   647  01B8                     __end_of_main:	
   648                           
   649                           	psect	text1
   650  0021                     __ptext1:	
   651 ;; *************** function _separa *****************
   652 ;; Defined at:
   653 ;;		line 81 in file "C:\Users\Aluno\Desktop\Projeto 6\code\lcd.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  valor           2   15[BANK0 ] int 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  unidade         2   26[BANK0 ] unsigned int 
   658 ;;  dezena          2   24[BANK0 ] unsigned int 
   659 ;;  centena         2   22[BANK0 ] unsigned int 
   660 ;;  milhar          2   18[BANK0 ] unsigned int 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      unsigned char 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       2       0       0       0
   671 ;;      Locals:         0      12       0       0       0
   672 ;;      Temps:          0       1       0       0       0
   673 ;;      Totals:         0      15       0       0       0
   674 ;;Total ram usage:       15 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    3
   677 ;; This function calls:
   678 ;;		___awdiv
   679 ;;		___awmod
   680 ;;		_lcd_data
   681 ;;		_lcd_set_position
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _separa
   689  0021                     _separa:	
   690                           
   691                           ;lcd.c: 84: uint16_t milhar = (valor/1000) ;
   692                           
   693                           ;incstack = 0
   694                           ; Regs used in _separa: [wreg+status,2+status,0+pclath+cstack]
   695  0021  30E8               	movlw	232
   696  0022  1283               	bcf	3,5	;RP0=0, select bank0
   697  0023  1303               	bcf	3,6	;RP1=0, select bank0
   698  0024  00A6               	movwf	___awdiv@divisor
   699  0025  3003               	movlw	3
   700  0026  00A7               	movwf	___awdiv@divisor+1
   701  0027  0830               	movf	separa@valor+1,w
   702  0028  00A9               	movwf	___awdiv@dividend+1
   703  0029  082F               	movf	separa@valor,w
   704  002A  00A8               	movwf	___awdiv@dividend
   705  002B  120A  118A  21B8  120A  118A  	fcall	___awdiv
   706  0030  1283               	bcf	3,5	;RP0=0, select bank0
   707  0031  1303               	bcf	3,6	;RP1=0, select bank0
   708  0032  0827               	movf	?___awdiv+1,w
   709  0033  00B3               	movwf	separa@milhar+1
   710  0034  0826               	movf	?___awdiv,w
   711  0035  00B2               	movwf	separa@milhar
   712                           
   713                           ;lcd.c: 85: uint16_t centena = 0;
   714  0036  01B6               	clrf	separa@centena
   715  0037  01B7               	clrf	separa@centena+1
   716                           
   717                           ;lcd.c: 86: uint16_t dezena = 0;
   718  0038  01B8               	clrf	separa@dezena
   719  0039  01B9               	clrf	separa@dezena+1
   720                           
   721                           ;lcd.c: 87: uint16_t unidade = 0;
   722  003A  01BA               	clrf	separa@unidade
   723  003B  01BB               	clrf	separa@unidade+1
   724                           
   725                           ;lcd.c: 90: centena = (valor%1000)/100;
   726  003C  3064               	movlw	100
   727  003D  00A6               	movwf	___awdiv@divisor
   728  003E  3000               	movlw	0
   729  003F  00A7               	movwf	___awdiv@divisor+1
   730  0040  0830               	movf	separa@valor+1,w
   731  0041  00A3               	movwf	___awmod@dividend+1
   732  0042  082F               	movf	separa@valor,w
   733  0043  00A2               	movwf	___awmod@dividend
   734  0044  30E8               	movlw	232
   735  0045  00A0               	movwf	___awmod@divisor
   736  0046  3003               	movlw	3
   737  0047  00A1               	movwf	___awmod@divisor+1
   738  0048  120A  118A  226A  120A  118A  	fcall	___awmod
   739  004D  1283               	bcf	3,5	;RP0=0, select bank0
   740  004E  1303               	bcf	3,6	;RP1=0, select bank0
   741  004F  0821               	movf	?___awmod+1,w
   742  0050  00A9               	movwf	___awdiv@dividend+1
   743  0051  0820               	movf	?___awmod,w
   744  0052  00A8               	movwf	___awdiv@dividend
   745  0053  120A  118A  21B8  120A  118A  	fcall	___awdiv
   746  0058  1283               	bcf	3,5	;RP0=0, select bank0
   747  0059  1303               	bcf	3,6	;RP1=0, select bank0
   748  005A  0827               	movf	?___awdiv+1,w
   749  005B  00B7               	movwf	separa@centena+1
   750  005C  0826               	movf	?___awdiv,w
   751  005D  00B6               	movwf	separa@centena
   752                           
   753                           ;lcd.c: 91: dezena = ((valor%1000)%100)/10;
   754  005E  0830               	movf	separa@valor+1,w
   755  005F  00A3               	movwf	___awmod@dividend+1
   756  0060  082F               	movf	separa@valor,w
   757  0061  00A2               	movwf	___awmod@dividend
   758  0062  30E8               	movlw	232
   759  0063  00A0               	movwf	___awmod@divisor
   760  0064  3003               	movlw	3
   761  0065  00A1               	movwf	___awmod@divisor+1
   762  0066  120A  118A  226A  120A  118A  	fcall	___awmod
   763  006B  1283               	bcf	3,5	;RP0=0, select bank0
   764  006C  1303               	bcf	3,6	;RP1=0, select bank0
   765  006D  0821               	movf	?___awmod+1,w
   766  006E  00BD               	movwf	_separa$483+1
   767  006F  0820               	movf	?___awmod,w
   768  0070  00BC               	movwf	_separa$483
   769                           
   770                           ;lcd.c: 91: dezena = ((valor%1000)%100)/10;
   771  0071  300A               	movlw	10
   772  0072  00A6               	movwf	___awdiv@divisor
   773  0073  3000               	movlw	0
   774  0074  00A7               	movwf	___awdiv@divisor+1
   775  0075  083D               	movf	_separa$483+1,w
   776  0076  00A3               	movwf	___awmod@dividend+1
   777  0077  083C               	movf	_separa$483,w
   778  0078  00A2               	movwf	___awmod@dividend
   779  0079  3064               	movlw	100
   780  007A  00A0               	movwf	___awmod@divisor
   781  007B  3000               	movlw	0
   782  007C  00A1               	movwf	___awmod@divisor+1
   783  007D  120A  118A  226A  120A  118A  	fcall	___awmod
   784  0082  1283               	bcf	3,5	;RP0=0, select bank0
   785  0083  1303               	bcf	3,6	;RP1=0, select bank0
   786  0084  0821               	movf	?___awmod+1,w
   787  0085  00A9               	movwf	___awdiv@dividend+1
   788  0086  0820               	movf	?___awmod,w
   789  0087  00A8               	movwf	___awdiv@dividend
   790  0088  120A  118A  21B8  120A  118A  	fcall	___awdiv
   791  008D  1283               	bcf	3,5	;RP0=0, select bank0
   792  008E  1303               	bcf	3,6	;RP1=0, select bank0
   793  008F  0827               	movf	?___awdiv+1,w
   794  0090  00B9               	movwf	separa@dezena+1
   795  0091  0826               	movf	?___awdiv,w
   796  0092  00B8               	movwf	separa@dezena
   797                           
   798                           ;lcd.c: 92: unidade = (((valor%1000)%100)%10)/1;
   799  0093  0830               	movf	separa@valor+1,w
   800  0094  00A3               	movwf	___awmod@dividend+1
   801  0095  082F               	movf	separa@valor,w
   802  0096  00A2               	movwf	___awmod@dividend
   803  0097  30E8               	movlw	232
   804  0098  00A0               	movwf	___awmod@divisor
   805  0099  3003               	movlw	3
   806  009A  00A1               	movwf	___awmod@divisor+1
   807  009B  120A  118A  226A  120A  118A  	fcall	___awmod
   808  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   809  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   810  00A2  0821               	movf	?___awmod+1,w
   811  00A3  00BD               	movwf	_separa$483+1
   812  00A4  0820               	movf	?___awmod,w
   813  00A5  00BC               	movwf	_separa$483
   814                           
   815                           ;lcd.c: 92: unidade = (((valor%1000)%100)%10)/1;
   816  00A6  083D               	movf	_separa$483+1,w
   817  00A7  00A3               	movwf	___awmod@dividend+1
   818  00A8  083C               	movf	_separa$483,w
   819  00A9  00A2               	movwf	___awmod@dividend
   820  00AA  3064               	movlw	100
   821  00AB  00A0               	movwf	___awmod@divisor
   822  00AC  3000               	movlw	0
   823  00AD  00A1               	movwf	___awmod@divisor+1
   824  00AE  120A  118A  226A  120A  118A  	fcall	___awmod
   825  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   826  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   827  00B5  0821               	movf	?___awmod+1,w
   828  00B6  00B5               	movwf	_separa$484+1
   829  00B7  0820               	movf	?___awmod,w
   830  00B8  00B4               	movwf	_separa$484
   831                           
   832                           ;lcd.c: 92: unidade = (((valor%1000)%100)%10)/1;
   833  00B9  300A               	movlw	10
   834  00BA  00A0               	movwf	___awmod@divisor
   835  00BB  3000               	movlw	0
   836  00BC  00A1               	movwf	___awmod@divisor+1
   837  00BD  0835               	movf	_separa$484+1,w
   838  00BE  00A3               	movwf	___awmod@dividend+1
   839  00BF  0834               	movf	_separa$484,w
   840  00C0  00A2               	movwf	___awmod@dividend
   841  00C1  120A  118A  226A  120A  118A  	fcall	___awmod
   842  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   843  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   844  00C8  0821               	movf	?___awmod+1,w
   845  00C9  00BB               	movwf	separa@unidade+1
   846  00CA  0820               	movf	?___awmod,w
   847  00CB  00BA               	movwf	separa@unidade
   848                           
   849                           ;lcd.c: 94: lcd_set_position(0,0);
   850  00CC  01A2               	clrf	lcd_set_position@y
   851  00CD  3000               	movlw	0
   852  00CE  120A  118A  22B7  120A  118A  	fcall	_lcd_set_position
   853                           
   854                           ;lcd.c: 95: lcd_data(milhar+0x30);
   855  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   856  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   857  00D5  0832               	movf	separa@milhar,w
   858  00D6  3E30               	addlw	48
   859  00D7  120A  118A  2213  120A  118A  	fcall	_lcd_data
   860                           
   861                           ;lcd.c: 97: lcd_set_position(0,1);
   862  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   863  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   864  00DE  01A2               	clrf	lcd_set_position@y
   865  00DF  0AA2               	incf	lcd_set_position@y,f
   866  00E0  3000               	movlw	0
   867  00E1  120A  118A  22B7  120A  118A  	fcall	_lcd_set_position
   868                           
   869                           ;lcd.c: 98: lcd_data('.');
   870  00E6  302E               	movlw	46
   871  00E7  120A  118A  2213  120A  118A  	fcall	_lcd_data
   872                           
   873                           ;lcd.c: 100: lcd_set_position(0,2);
   874  00EC  3002               	movlw	2
   875  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   876  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   877  00EF  00B1               	movwf	??_separa
   878  00F0  0831               	movf	??_separa,w
   879  00F1  00A2               	movwf	lcd_set_position@y
   880  00F2  3000               	movlw	0
   881  00F3  120A  118A  22B7  120A  118A  	fcall	_lcd_set_position
   882                           
   883                           ;lcd.c: 101: lcd_data(centena+0x30);
   884  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   885  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   886  00FA  0836               	movf	separa@centena,w
   887  00FB  3E30               	addlw	48
   888  00FC  120A  118A  2213  120A  118A  	fcall	_lcd_data
   889                           
   890                           ;lcd.c: 103: lcd_set_position(0,3);
   891  0101  3003               	movlw	3
   892  0102  1283               	bcf	3,5	;RP0=0, select bank0
   893  0103  1303               	bcf	3,6	;RP1=0, select bank0
   894  0104  00B1               	movwf	??_separa
   895  0105  0831               	movf	??_separa,w
   896  0106  00A2               	movwf	lcd_set_position@y
   897  0107  3000               	movlw	0
   898  0108  120A  118A  22B7  120A  118A  	fcall	_lcd_set_position
   899                           
   900                           ;lcd.c: 104: lcd_data(dezena+0x30);
   901  010D  1283               	bcf	3,5	;RP0=0, select bank0
   902  010E  1303               	bcf	3,6	;RP1=0, select bank0
   903  010F  0838               	movf	separa@dezena,w
   904  0110  3E30               	addlw	48
   905  0111  120A  118A  2213  120A  118A  	fcall	_lcd_data
   906                           
   907                           ;lcd.c: 106: lcd_set_position(0,4);
   908  0116  3004               	movlw	4
   909  0117  1283               	bcf	3,5	;RP0=0, select bank0
   910  0118  1303               	bcf	3,6	;RP1=0, select bank0
   911  0119  00B1               	movwf	??_separa
   912  011A  0831               	movf	??_separa,w
   913  011B  00A2               	movwf	lcd_set_position@y
   914  011C  3000               	movlw	0
   915  011D  120A  118A  22B7  120A  118A  	fcall	_lcd_set_position
   916                           
   917                           ;lcd.c: 107: lcd_data(unidade+0x30);
   918  0122  1283               	bcf	3,5	;RP0=0, select bank0
   919  0123  1303               	bcf	3,6	;RP1=0, select bank0
   920  0124  083A               	movf	separa@unidade,w
   921  0125  3E30               	addlw	48
   922  0126  120A  118A  2213  120A  118A  	fcall	_lcd_data
   923                           
   924                           ;lcd.c: 109: lcd_set_position(0,5);
   925  012B  3005               	movlw	5
   926  012C  1283               	bcf	3,5	;RP0=0, select bank0
   927  012D  1303               	bcf	3,6	;RP1=0, select bank0
   928  012E  00B1               	movwf	??_separa
   929  012F  0831               	movf	??_separa,w
   930  0130  00A2               	movwf	lcd_set_position@y
   931  0131  3000               	movlw	0
   932  0132  120A  118A  22B7  120A  118A  	fcall	_lcd_set_position
   933                           
   934                           ;lcd.c: 110: lcd_data('V');
   935  0137  3056               	movlw	86
   936  0138  120A  118A  2213   	fcall	_lcd_data
   937  013B  0008               	return
   938  013C                     __end_of_separa:	
   939                           ;lcd.c: 112: return 0;
   940                           ;	Return value of _separa is never used
   941                           
   942                           
   943                           	psect	text2
   944  02B7                     __ptext2:	
   945 ;; *************** function _lcd_set_position *****************
   946 ;; Defined at:
   947 ;;		line 63 in file "C:\Users\Aluno\Desktop\Projeto 6\code\lcd.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  x               1    wreg     unsigned char 
   950 ;;  y               1    2[BANK0 ] unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  x               1    4[BANK0 ] unsigned char 
   953 ;;  pos             1    5[BANK0 ] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      unsigned char 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       1       0       0       0
   964 ;;      Locals:         0       2       0       0       0
   965 ;;      Temps:          0       1       0       0       0
   966 ;;      Totals:         0       4       0       0       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		_lcd_cmd
   972 ;; This function is called by:
   973 ;;		_separa
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _lcd_set_position
   979  02B7                     _lcd_set_position:	
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in _lcd_set_position: [wreg+status,2+status,0+pclath+cstack]
   983                           ;lcd_set_position@x stored from wreg
   984  02B7  1283               	bcf	3,5	;RP0=0, select bank0
   985  02B8  1303               	bcf	3,6	;RP1=0, select bank0
   986  02B9  00A4               	movwf	lcd_set_position@x
   987                           
   988                           ;lcd.c: 65: uint8_t pos = 0;
   989  02BA  01A5               	clrf	lcd_set_position@pos
   990                           
   991                           ;lcd.c: 66: if ( x == 0 ){
   992  02BB  0824               	movf	lcd_set_position@x,w
   993  02BC  1D03               	btfss	3,2
   994  02BD  2ADA               	goto	l1177
   995                           
   996                           ;lcd.c: 67: pos = y;
   997  02BE  0822               	movf	lcd_set_position@y,w
   998  02BF  00A3               	movwf	??_lcd_set_position
   999  02C0  0823               	movf	??_lcd_set_position,w
  1000  02C1  00A5               	movwf	lcd_set_position@pos
  1001                           
  1002                           ;lcd.c: 68: pos |= (1<<7);
  1003  02C2  17A5               	bsf	lcd_set_position@pos,7
  1004                           
  1005                           ;lcd.c: 69: lcd_cmd((pos>>4)&0x0F);
  1006  02C3  0825               	movf	lcd_set_position@pos,w
  1007  02C4  00A3               	movwf	??_lcd_set_position
  1008  02C5  3004               	movlw	4
  1009  02C6                     u555:	
  1010  02C6  1003               	clrc
  1011  02C7  0CA3               	rrf	??_lcd_set_position,f
  1012  02C8  3EFF               	addlw	-1
  1013  02C9  1D03               	skipz
  1014  02CA  2AC6               	goto	u555
  1015  02CB  0823               	movf	??_lcd_set_position,w
  1016  02CC  390F               	andlw	15
  1017  02CD  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1018                           
  1019                           ;lcd.c: 70: lcd_cmd(pos & 0x0F);
  1020  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1021  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1022  02D4  0825               	movf	lcd_set_position@pos,w
  1023  02D5  390F               	andlw	15
  1024  02D6  120A  118A  2334   	fcall	_lcd_cmd
  1025                           
  1026                           ;lcd.c: 71: } else {
  1027  02D9  0008               	return
  1028  02DA                     l1177:	
  1029                           
  1030                           ;lcd.c: 72: pos = y;
  1031  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1032  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1033  02DC  0822               	movf	lcd_set_position@y,w
  1034  02DD  00A3               	movwf	??_lcd_set_position
  1035  02DE  0823               	movf	??_lcd_set_position,w
  1036  02DF  00A5               	movwf	lcd_set_position@pos
  1037                           
  1038                           ;lcd.c: 73: pos | = (0xC0);
  1039  02E0  30C0               	movlw	192
  1040  02E1  00A3               	movwf	??_lcd_set_position
  1041  02E2  0823               	movf	??_lcd_set_position,w
  1042  02E3  04A5               	iorwf	lcd_set_position@pos,f
  1043                           
  1044                           ;lcd.c: 74: lcd_cmd((pos>>4)&0x0F);
  1045  02E4  0825               	movf	lcd_set_position@pos,w
  1046  02E5  00A3               	movwf	??_lcd_set_position
  1047  02E6  3004               	movlw	4
  1048  02E7                     u565:	
  1049  02E7  1003               	clrc
  1050  02E8  0CA3               	rrf	??_lcd_set_position,f
  1051  02E9  3EFF               	addlw	-1
  1052  02EA  1D03               	skipz
  1053  02EB  2AE7               	goto	u565
  1054  02EC  0823               	movf	??_lcd_set_position,w
  1055  02ED  390F               	andlw	15
  1056  02EE  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1057                           
  1058                           ;lcd.c: 75: lcd_cmd(pos & 0x0F);
  1059  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1060  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1061  02F5  0825               	movf	lcd_set_position@pos,w
  1062  02F6  390F               	andlw	15
  1063  02F7  120A  118A  2334   	fcall	_lcd_cmd
  1064  02FA  0008               	return
  1065  02FB                     __end_of_lcd_set_position:	
  1066                           ;lcd.c: 76: }
  1067                           ;lcd.c: 77: return 0;
  1068                           ;	Return value of _lcd_set_position is never used
  1069                           
  1070                           
  1071                           	psect	text3
  1072  0213                     __ptext3:	
  1073 ;; *************** function _lcd_data *****************
  1074 ;; Defined at:
  1075 ;;		line 35 in file "C:\Users\Aluno\Desktop\Projeto 6\code\lcd.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  data            1    wreg     unsigned char 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  data            1    4[BANK0 ] unsigned char 
  1080 ;;  high_nibble     1    3[BANK0 ] unsigned char 
  1081 ;;  low_nibble      1    2[BANK0 ] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      unsigned char 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       3       0       0       0
  1093 ;;      Temps:          0       2       0       0       0
  1094 ;;      Totals:         0       5       0       0       0
  1095 ;;Total ram usage:        5 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_separa
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _lcd_data
  1107  0213                     _lcd_data:	
  1108                           
  1109                           ;incstack = 0
  1110                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1111                           ;lcd_data@data stored from wreg
  1112  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0215  00A4               	movwf	lcd_data@data
  1115                           
  1116                           ;lcd.c: 37: uint8_t high_nibble;
  1117                           ;lcd.c: 38: uint8_t low_nibble;
  1118                           ;lcd.c: 40: high_nibble = data>>4;
  1119  0216  0824               	movf	lcd_data@data,w
  1120  0217  00A0               	movwf	??_lcd_data
  1121  0218  3004               	movlw	4
  1122  0219                     u535:	
  1123  0219  1003               	clrc
  1124  021A  0CA0               	rrf	??_lcd_data,f
  1125  021B  3EFF               	addlw	-1
  1126  021C  1D03               	skipz
  1127  021D  2A19               	goto	u535
  1128  021E  0820               	movf	??_lcd_data,w
  1129  021F  00A1               	movwf	??_lcd_data+1
  1130  0220  0821               	movf	??_lcd_data+1,w
  1131  0221  00A3               	movwf	lcd_data@high_nibble
  1132                           
  1133                           ;lcd.c: 41: high_nibble &= 0x0F;
  1134  0222  300F               	movlw	15
  1135  0223  00A0               	movwf	??_lcd_data
  1136  0224  0820               	movf	??_lcd_data,w
  1137  0225  05A3               	andwf	lcd_data@high_nibble,f
  1138                           
  1139                           ;lcd.c: 43: low_nibble = data & 0x0F;
  1140  0226  0824               	movf	lcd_data@data,w
  1141  0227  390F               	andlw	15
  1142  0228  00A0               	movwf	??_lcd_data
  1143  0229  0820               	movf	??_lcd_data,w
  1144  022A  00A2               	movwf	lcd_data@low_nibble
  1145                           
  1146                           ;lcd.c: 45: PORTB = high_nibble;
  1147  022B  0823               	movf	lcd_data@high_nibble,w
  1148  022C  0086               	movwf	6	;volatile
  1149                           
  1150                           ;lcd.c: 46: PORTB |= (1<<4);
  1151  022D  1606               	bsf	6,4	;volatile
  1152                           
  1153                           ;lcd.c: 47: PORTB | = (1<<5);
  1154  022E  1686               	bsf	6,5	;volatile
  1155                           
  1156                           ;lcd.c: 48: _delay((unsigned long)((2)*(4000000/4000.0)));
  1157  022F  3003               	movlw	3
  1158  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0232  00A1               	movwf	??_lcd_data+1
  1161  0233  3097               	movlw	151
  1162  0234  00A0               	movwf	??_lcd_data
  1163  0235                     u697:	
  1164  0235  0BA0               	decfsz	??_lcd_data,f
  1165  0236  2A35               	goto	u697
  1166  0237  0BA1               	decfsz	??_lcd_data+1,f
  1167  0238  2A35               	goto	u697
  1168                           
  1169                           ;lcd.c: 49: PORTB & =~(1<<5);
  1170  0239  30DF               	movlw	223
  1171  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1172  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1173  023C  00A0               	movwf	??_lcd_data
  1174  023D  0820               	movf	??_lcd_data,w
  1175  023E  0586               	andwf	6,f	;volatile
  1176                           
  1177                           ;lcd.c: 50: _delay((unsigned long)((2)*(4000000/4000.0)));
  1178  023F  3003               	movlw	3
  1179  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0242  00A1               	movwf	??_lcd_data+1
  1182  0243  3097               	movlw	151
  1183  0244  00A0               	movwf	??_lcd_data
  1184  0245                     u707:	
  1185  0245  0BA0               	decfsz	??_lcd_data,f
  1186  0246  2A45               	goto	u707
  1187  0247  0BA1               	decfsz	??_lcd_data+1,f
  1188  0248  2A45               	goto	u707
  1189                           
  1190                           ;lcd.c: 52: PORTB = low_nibble;
  1191  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1192  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1193  024B  0822               	movf	lcd_data@low_nibble,w
  1194  024C  0086               	movwf	6	;volatile
  1195                           
  1196                           ;lcd.c: 53: PORTB |= (1<<4);
  1197  024D  1606               	bsf	6,4	;volatile
  1198                           
  1199                           ;lcd.c: 54: PORTB | = (1<<5);
  1200  024E  1686               	bsf	6,5	;volatile
  1201                           
  1202                           ;lcd.c: 55: _delay((unsigned long)((2)*(4000000/4000.0)));
  1203  024F  3003               	movlw	3
  1204  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0252  00A1               	movwf	??_lcd_data+1
  1207  0253  3097               	movlw	151
  1208  0254  00A0               	movwf	??_lcd_data
  1209  0255                     u717:	
  1210  0255  0BA0               	decfsz	??_lcd_data,f
  1211  0256  2A55               	goto	u717
  1212  0257  0BA1               	decfsz	??_lcd_data+1,f
  1213  0258  2A55               	goto	u717
  1214                           
  1215                           ;lcd.c: 56: PORTB & =~(1<<5);
  1216  0259  30DF               	movlw	223
  1217  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1218  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1219  025C  00A0               	movwf	??_lcd_data
  1220  025D  0820               	movf	??_lcd_data,w
  1221  025E  0586               	andwf	6,f	;volatile
  1222                           
  1223                           ;lcd.c: 57: _delay((unsigned long)((2)*(4000000/4000.0)));
  1224  025F  3003               	movlw	3
  1225  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0262  00A1               	movwf	??_lcd_data+1
  1228  0263  3097               	movlw	151
  1229  0264  00A0               	movwf	??_lcd_data
  1230  0265                     u727:	
  1231  0265  0BA0               	decfsz	??_lcd_data,f
  1232  0266  2A65               	goto	u727
  1233  0267  0BA1               	decfsz	??_lcd_data+1,f
  1234  0268  2A65               	goto	u727
  1235  0269  0008               	return
  1236  026A                     __end_of_lcd_data:	
  1237                           ;lcd.c: 59: return 0;
  1238                           ;	Return value of _lcd_data is never used
  1239                           
  1240                           
  1241                           	psect	text4
  1242  026A                     __ptext4:	
  1243 ;; *************** function ___awmod *****************
  1244 ;; Defined at:
  1245 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  divisor         2    0[BANK0 ] int 
  1248 ;;  dividend        2    2[BANK0 ] int 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  sign            1    5[BANK0 ] unsigned char 
  1251 ;;  counter         1    4[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  2    0[BANK0 ] int 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       4       0       0       0
  1262 ;;      Locals:         0       2       0       0       0
  1263 ;;      Temps:          1       0       0       0       0
  1264 ;;      Totals:         1       6       0       0       0
  1265 ;;Total ram usage:        7 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_separa
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function ___awmod
  1277  026A                     ___awmod:	
  1278                           
  1279                           ;incstack = 0
  1280                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1281  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1282  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1283  026C  01A5               	clrf	___awmod@sign
  1284  026D  1FA3               	btfss	___awmod@dividend+1,7
  1285  026E  2A76               	goto	l1195
  1286  026F  09A2               	comf	___awmod@dividend,f
  1287  0270  09A3               	comf	___awmod@dividend+1,f
  1288  0271  0AA2               	incf	___awmod@dividend,f
  1289  0272  1903               	skipnz
  1290  0273  0AA3               	incf	___awmod@dividend+1,f
  1291  0274  01A5               	clrf	___awmod@sign
  1292  0275  0AA5               	incf	___awmod@sign,f
  1293  0276                     l1195:	
  1294  0276  1FA1               	btfss	___awmod@divisor+1,7
  1295  0277  2A7D               	goto	l1199
  1296  0278  09A0               	comf	___awmod@divisor,f
  1297  0279  09A1               	comf	___awmod@divisor+1,f
  1298  027A  0AA0               	incf	___awmod@divisor,f
  1299  027B  1903               	skipnz
  1300  027C  0AA1               	incf	___awmod@divisor+1,f
  1301  027D                     l1199:	
  1302  027D  0820               	movf	___awmod@divisor,w
  1303  027E  0421               	iorwf	___awmod@divisor+1,w
  1304  027F  1903               	btfsc	3,2
  1305  0280  2AAA               	goto	l1217
  1306  0281  01A4               	clrf	___awmod@counter
  1307  0282  0AA4               	incf	___awmod@counter,f
  1308  0283                     l1207:	
  1309  0283  1BA1               	btfsc	___awmod@divisor+1,7
  1310  0284  2A91               	goto	l1209
  1311  0285  3001               	movlw	1
  1312  0286                     u605:	
  1313  0286  1003               	clrc
  1314  0287  0DA0               	rlf	___awmod@divisor,f
  1315  0288  0DA1               	rlf	___awmod@divisor+1,f
  1316  0289  3EFF               	addlw	-1
  1317  028A  1D03               	skipz
  1318  028B  2A86               	goto	u605
  1319  028C  3001               	movlw	1
  1320  028D  00F5               	movwf	??___awmod
  1321  028E  0875               	movf	??___awmod,w
  1322  028F  07A4               	addwf	___awmod@counter,f
  1323  0290  2A83               	goto	l1207
  1324  0291                     l1209:	
  1325  0291  0821               	movf	___awmod@divisor+1,w
  1326  0292  0223               	subwf	___awmod@dividend+1,w
  1327  0293  1D03               	skipz
  1328  0294  2A97               	goto	u625
  1329  0295  0820               	movf	___awmod@divisor,w
  1330  0296  0222               	subwf	___awmod@dividend,w
  1331  0297                     u625:	
  1332  0297  1C03               	skipc
  1333  0298  2A9F               	goto	l1213
  1334  0299  0820               	movf	___awmod@divisor,w
  1335  029A  02A2               	subwf	___awmod@dividend,f
  1336  029B  0821               	movf	___awmod@divisor+1,w
  1337  029C  1C03               	skipc
  1338  029D  03A3               	decf	___awmod@dividend+1,f
  1339  029E  02A3               	subwf	___awmod@dividend+1,f
  1340  029F                     l1213:	
  1341  029F  3001               	movlw	1
  1342  02A0                     u635:	
  1343  02A0  1003               	clrc
  1344  02A1  0CA1               	rrf	___awmod@divisor+1,f
  1345  02A2  0CA0               	rrf	___awmod@divisor,f
  1346  02A3  3EFF               	addlw	-1
  1347  02A4  1D03               	skipz
  1348  02A5  2AA0               	goto	u635
  1349  02A6  3001               	movlw	1
  1350  02A7  02A4               	subwf	___awmod@counter,f
  1351  02A8  1D03               	btfss	3,2
  1352  02A9  2A91               	goto	l1209
  1353  02AA                     l1217:	
  1354  02AA  0825               	movf	___awmod@sign,w
  1355  02AB  1903               	btfsc	3,2
  1356  02AC  2AB2               	goto	l1221
  1357  02AD  09A2               	comf	___awmod@dividend,f
  1358  02AE  09A3               	comf	___awmod@dividend+1,f
  1359  02AF  0AA2               	incf	___awmod@dividend,f
  1360  02B0  1903               	skipnz
  1361  02B1  0AA3               	incf	___awmod@dividend+1,f
  1362  02B2                     l1221:	
  1363  02B2  0823               	movf	___awmod@dividend+1,w
  1364  02B3  00A1               	movwf	?___awmod+1
  1365  02B4  0822               	movf	___awmod@dividend,w
  1366  02B5  00A0               	movwf	?___awmod
  1367  02B6  0008               	return
  1368  02B7                     __end_of___awmod:	
  1369                           
  1370                           	psect	text5
  1371  01B8                     __ptext5:	
  1372 ;; *************** function ___awdiv *****************
  1373 ;; Defined at:
  1374 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  divisor         2    6[BANK0 ] int 
  1377 ;;  dividend        2    8[BANK0 ] int 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  quotient        2   13[BANK0 ] int 
  1380 ;;  sign            1   12[BANK0 ] unsigned char 
  1381 ;;  counter         1   11[BANK0 ] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    6[BANK0 ] int 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       4       0       0       0
  1392 ;;      Locals:         0       4       0       0       0
  1393 ;;      Temps:          0       1       0       0       0
  1394 ;;      Totals:         0       9       0       0       0
  1395 ;;Total ram usage:        9 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_separa
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function ___awdiv
  1407  01B8                     ___awdiv:	
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1411  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1412  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1413  01BA  01AC               	clrf	___awdiv@sign
  1414  01BB  1FA7               	btfss	___awdiv@divisor+1,7
  1415  01BC  29C4               	goto	l911
  1416  01BD  09A6               	comf	___awdiv@divisor,f
  1417  01BE  09A7               	comf	___awdiv@divisor+1,f
  1418  01BF  0AA6               	incf	___awdiv@divisor,f
  1419  01C0  1903               	skipnz
  1420  01C1  0AA7               	incf	___awdiv@divisor+1,f
  1421  01C2  01AC               	clrf	___awdiv@sign
  1422  01C3  0AAC               	incf	___awdiv@sign,f
  1423  01C4                     l911:	
  1424  01C4  1FA9               	btfss	___awdiv@dividend+1,7
  1425  01C5  29CF               	goto	l917
  1426  01C6  09A8               	comf	___awdiv@dividend,f
  1427  01C7  09A9               	comf	___awdiv@dividend+1,f
  1428  01C8  0AA8               	incf	___awdiv@dividend,f
  1429  01C9  1903               	skipnz
  1430  01CA  0AA9               	incf	___awdiv@dividend+1,f
  1431  01CB  3001               	movlw	1
  1432  01CC  00AA               	movwf	??___awdiv
  1433  01CD  082A               	movf	??___awdiv,w
  1434  01CE  06AC               	xorwf	___awdiv@sign,f
  1435  01CF                     l917:	
  1436  01CF  01AD               	clrf	___awdiv@quotient
  1437  01D0  01AE               	clrf	___awdiv@quotient+1
  1438  01D1  0826               	movf	___awdiv@divisor,w
  1439  01D2  0427               	iorwf	___awdiv@divisor+1,w
  1440  01D3  1903               	btfsc	3,2
  1441  01D4  2A06               	goto	l939
  1442  01D5  01AB               	clrf	___awdiv@counter
  1443  01D6  0AAB               	incf	___awdiv@counter,f
  1444  01D7                     l927:	
  1445  01D7  1BA7               	btfsc	___awdiv@divisor+1,7
  1446  01D8  29E5               	goto	l929
  1447  01D9  3001               	movlw	1
  1448  01DA                     u345:	
  1449  01DA  1003               	clrc
  1450  01DB  0DA6               	rlf	___awdiv@divisor,f
  1451  01DC  0DA7               	rlf	___awdiv@divisor+1,f
  1452  01DD  3EFF               	addlw	-1
  1453  01DE  1D03               	skipz
  1454  01DF  29DA               	goto	u345
  1455  01E0  3001               	movlw	1
  1456  01E1  00AA               	movwf	??___awdiv
  1457  01E2  082A               	movf	??___awdiv,w
  1458  01E3  07AB               	addwf	___awdiv@counter,f
  1459  01E4  29D7               	goto	l927
  1460  01E5                     l929:	
  1461  01E5  3001               	movlw	1
  1462  01E6                     u365:	
  1463  01E6  1003               	clrc
  1464  01E7  0DAD               	rlf	___awdiv@quotient,f
  1465  01E8  0DAE               	rlf	___awdiv@quotient+1,f
  1466  01E9  3EFF               	addlw	-1
  1467  01EA  1D03               	skipz
  1468  01EB  29E6               	goto	u365
  1469  01EC  0827               	movf	___awdiv@divisor+1,w
  1470  01ED  0229               	subwf	___awdiv@dividend+1,w
  1471  01EE  1D03               	skipz
  1472  01EF  29F2               	goto	u375
  1473  01F0  0826               	movf	___awdiv@divisor,w
  1474  01F1  0228               	subwf	___awdiv@dividend,w
  1475  01F2                     u375:	
  1476  01F2  1C03               	skipc
  1477  01F3  29FB               	goto	l935
  1478  01F4  0826               	movf	___awdiv@divisor,w
  1479  01F5  02A8               	subwf	___awdiv@dividend,f
  1480  01F6  0827               	movf	___awdiv@divisor+1,w
  1481  01F7  1C03               	skipc
  1482  01F8  03A9               	decf	___awdiv@dividend+1,f
  1483  01F9  02A9               	subwf	___awdiv@dividend+1,f
  1484  01FA  142D               	bsf	___awdiv@quotient,0
  1485  01FB                     l935:	
  1486  01FB  3001               	movlw	1
  1487  01FC                     u385:	
  1488  01FC  1003               	clrc
  1489  01FD  0CA7               	rrf	___awdiv@divisor+1,f
  1490  01FE  0CA6               	rrf	___awdiv@divisor,f
  1491  01FF  3EFF               	addlw	-1
  1492  0200  1D03               	skipz
  1493  0201  29FC               	goto	u385
  1494  0202  3001               	movlw	1
  1495  0203  02AB               	subwf	___awdiv@counter,f
  1496  0204  1D03               	btfss	3,2
  1497  0205  29E5               	goto	l929
  1498  0206                     l939:	
  1499  0206  082C               	movf	___awdiv@sign,w
  1500  0207  1903               	btfsc	3,2
  1501  0208  2A0E               	goto	l943
  1502  0209  09AD               	comf	___awdiv@quotient,f
  1503  020A  09AE               	comf	___awdiv@quotient+1,f
  1504  020B  0AAD               	incf	___awdiv@quotient,f
  1505  020C  1903               	skipnz
  1506  020D  0AAE               	incf	___awdiv@quotient+1,f
  1507  020E                     l943:	
  1508  020E  082E               	movf	___awdiv@quotient+1,w
  1509  020F  00A7               	movwf	?___awdiv+1
  1510  0210  082D               	movf	___awdiv@quotient,w
  1511  0211  00A6               	movwf	?___awdiv
  1512  0212  0008               	return
  1513  0213                     __end_of___awdiv:	
  1514                           
  1515                           	psect	text6
  1516  02FB                     __ptext6:	
  1517 ;; *************** function _lcd_init *****************
  1518 ;; Defined at:
  1519 ;;		line 5 in file "C:\Users\Aluno\Desktop\Projeto 6\code\lcd.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      unsigned char 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       2       0       0       0
  1536 ;;      Totals:         0       2       0       0       0
  1537 ;;Total ram usage:        2 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    2
  1540 ;; This function calls:
  1541 ;;		_lcd_cmd
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _lcd_init
  1549  02FB                     _lcd_init:	
  1550                           
  1551                           ;lcd.c: 7: _delay((unsigned long)((40)*(4000000/4000.0)));
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1555  02FB  3034               	movlw	52
  1556  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1558  02FE  00A3               	movwf	??_lcd_init+1
  1559  02FF  30F1               	movlw	241
  1560  0300  00A2               	movwf	??_lcd_init
  1561  0301                     u737:	
  1562  0301  0BA2               	decfsz	??_lcd_init,f
  1563  0302  2B01               	goto	u737
  1564  0303  0BA3               	decfsz	??_lcd_init+1,f
  1565  0304  2B01               	goto	u737
  1566                           
  1567                           ;lcd.c: 8: TRISB = 0x00;
  1568  0305  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0306  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0307  0186               	clrf	6	;volatile
  1571                           
  1572                           ;lcd.c: 9: ANSELH = 0x00;
  1573  0308  1683               	bsf	3,5	;RP0=1, select bank3
  1574  0309  1703               	bsf	3,6	;RP1=1, select bank3
  1575  030A  0189               	clrf	9	;volatile
  1576                           
  1577                           ;lcd.c: 11: lcd_cmd(0x02);
  1578  030B  3002               	movlw	2
  1579  030C  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1580                           
  1581                           ;lcd.c: 12: lcd_cmd(0x02);
  1582  0311  3002               	movlw	2
  1583  0312  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1584                           
  1585                           ;lcd.c: 13: lcd_cmd(0x08);
  1586  0317  3008               	movlw	8
  1587  0318  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1588                           
  1589                           ;lcd.c: 14: lcd_cmd(0x00);
  1590  031D  3000               	movlw	0
  1591  031E  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1592                           
  1593                           ;lcd.c: 15: lcd_cmd(0x0C);
  1594  0323  300C               	movlw	12
  1595  0324  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1596                           
  1597                           ;lcd.c: 16: lcd_cmd(0x00);
  1598  0329  3000               	movlw	0
  1599  032A  120A  118A  2334  120A  118A  	fcall	_lcd_cmd
  1600                           
  1601                           ;lcd.c: 17: lcd_cmd(0x06);
  1602  032F  3006               	movlw	6
  1603  0330  120A  118A  2334   	fcall	_lcd_cmd
  1604  0333  0008               	return
  1605  0334                     __end_of_lcd_init:	
  1606                           ;lcd.c: 19: return 0;
  1607                           ;	Return value of _lcd_init is never used
  1608                           
  1609                           
  1610                           	psect	text7
  1611  0334                     __ptext7:	
  1612 ;; *************** function _lcd_cmd *****************
  1613 ;; Defined at:
  1614 ;;		line 23 in file "C:\Users\Aluno\Desktop\Projeto 6\code\lcd.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  cmd             1    wreg     unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  cmd             1    5[COMMON] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      unsigned char 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         1       0       0       0       0
  1630 ;;      Temps:          0       2       0       0       0
  1631 ;;      Totals:         1       2       0       0       0
  1632 ;;Total ram usage:        3 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_lcd_init
  1639 ;;		_lcd_set_position
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _lcd_cmd
  1645  0334                     _lcd_cmd:	
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1649                           ;lcd_cmd@cmd stored from wreg
  1650  0334  00F5               	movwf	lcd_cmd@cmd
  1651                           
  1652                           ;lcd.c: 25: PORTB = cmd;
  1653  0335  0875               	movf	lcd_cmd@cmd,w
  1654  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0338  0086               	movwf	6	;volatile
  1657                           
  1658                           ;lcd.c: 26: PORTB &= ~(1<<4);
  1659  0339  30EF               	movlw	239
  1660  033A  00A0               	movwf	??_lcd_cmd
  1661  033B  0820               	movf	??_lcd_cmd,w
  1662  033C  0586               	andwf	6,f	;volatile
  1663                           
  1664                           ;lcd.c: 27: PORTB | = (1<<5);
  1665  033D  1686               	bsf	6,5	;volatile
  1666                           
  1667                           ;lcd.c: 28: _delay((unsigned long)((50)*(4000000/4000.0)));
  1668  033E  3041               	movlw	65
  1669  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0341  00A1               	movwf	??_lcd_cmd+1
  1672  0342  30ED               	movlw	237
  1673  0343  00A0               	movwf	??_lcd_cmd
  1674  0344                     u747:	
  1675  0344  0BA0               	decfsz	??_lcd_cmd,f
  1676  0345  2B44               	goto	u747
  1677  0346  0BA1               	decfsz	??_lcd_cmd+1,f
  1678  0347  2B44               	goto	u747
  1679  0348  2B49               	nop2
  1680                           
  1681                           ;lcd.c: 29: PORTB & =~(1<<5);
  1682  0349  30DF               	movlw	223
  1683  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1684  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1685  034C  00A0               	movwf	??_lcd_cmd
  1686  034D  0820               	movf	??_lcd_cmd,w
  1687  034E  0586               	andwf	6,f	;volatile
  1688                           
  1689                           ;lcd.c: 30: _delay((unsigned long)((50)*(4000000/4000.0)));
  1690  034F  3041               	movlw	65
  1691  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0352  00A1               	movwf	??_lcd_cmd+1
  1694  0353  30ED               	movlw	237
  1695  0354  00A0               	movwf	??_lcd_cmd
  1696  0355                     u757:	
  1697  0355  0BA0               	decfsz	??_lcd_cmd,f
  1698  0356  2B55               	goto	u757
  1699  0357  0BA1               	decfsz	??_lcd_cmd+1,f
  1700  0358  2B55               	goto	u757
  1701  0359  2B5A               	nop2
  1702  035A  0008               	return
  1703  035B                     __end_of_lcd_cmd:	
  1704                           ;lcd.c: 31: return 0;
  1705                           ;	Return value of _lcd_cmd is never used
  1706                           
  1707                           
  1708                           	psect	text8
  1709  035B                     __ptext8:	
  1710 ;; *************** function _ISR *****************
  1711 ;; Defined at:
  1712 ;;		line 12 in file "C:\Users\Aluno\Desktop\Projeto 6\code\main.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          5       0       0       0       0
  1729 ;;      Totals:         5       0       0       0       0
  1730 ;;Total ram usage:        5 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		Interrupt level 1
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _ISR
  1741  035B                     _ISR:	
  1742                           
  1743                           ;main.c: 14: if ( PIR1 & (1<<0)){
  1744  035B  1C0C               	btfss	12,0	;volatile
  1745  035C  2B67               	goto	i1l56
  1746                           
  1747                           ;main.c: 15: PIR1 & = ~(1<<0);
  1748  035D  30FE               	movlw	254
  1749  035E  00F0               	movwf	??_ISR
  1750  035F  0870               	movf	??_ISR,w
  1751  0360  058C               	andwf	12,f	;volatile
  1752                           
  1753                           ;main.c: 16: TMR1L = 0xEF;
  1754  0361  30EF               	movlw	239
  1755  0362  008E               	movwf	14	;volatile
  1756                           
  1757                           ;main.c: 17: TMR1H = 0xD8;
  1758  0363  30D8               	movlw	216
  1759  0364  008F               	movwf	15	;volatile
  1760                           
  1761                           ;main.c: 18: periodic_interrupt =1 ;
  1762  0365  01C2               	clrf	_periodic_interrupt
  1763  0366  0AC2               	incf	_periodic_interrupt,f
  1764  0367                     i1l56:	
  1765  0367  0874               	movf	??_ISR+4,w
  1766  0368  00FF               	movwf	127
  1767  0369  0873               	movf	??_ISR+3,w
  1768  036A  008A               	movwf	10
  1769  036B  0872               	movf	??_ISR+2,w
  1770  036C  0084               	movwf	4
  1771  036D  0E71               	swapf	(??_ISR+1)^(0+-128),w
  1772  036E  0083               	movwf	3
  1773  036F  0EFE               	swapf	126,f
  1774  0370  0E7E               	swapf	126,w
  1775  0371  0009               	retfie
  1776  0372                     __end_of_ISR:	
  1777  007E                     btemp	set	126	;btemp
  1778  007E                     wtemp0	set	126
  1779                           
  1780                           	psect	intentry
  1781  0004                     __pintentry:	
  1782                           ;incstack = 0
  1783                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1784                           
  1785  0004                     interrupt_function:	
  1786  007E                     saved_w	set	btemp
  1787  0004  00FE               	movwf	btemp
  1788  0005  0E03               	swapf	3,w
  1789  0006  00F1               	movwf	??_ISR+1
  1790  0007  0804               	movf	4,w
  1791  0008  00F2               	movwf	??_ISR+2
  1792  0009  080A               	movf	10,w
  1793  000A  00F3               	movwf	??_ISR+3
  1794  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1795  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1796  000D  087F               	movf	btemp+1,w
  1797  000E  00F4               	movwf	??_ISR+4
  1798  000F  120A  118A  2B5B   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     32      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _separa->___awmod
    _lcd_set_position->_lcd_cmd
    ___awdiv->___awmod
    _lcd_init->_lcd_cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_separa
    _separa->___awdiv
    _lcd_set_position->_lcd_cmd
    ___awdiv->___awmod
    _lcd_init->_lcd_cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3084
                                             30 BANK0      2     2      0
                           _lcd_init
                             _separa
 ---------------------------------------------------------------------------------
 (1) _separa                                              15    13      2    3053
                                             15 BANK0     15    13      2
                            ___awdiv
                            ___awmod
                           _lcd_data
                   _lcd_set_position
 ---------------------------------------------------------------------------------
 (2) _lcd_set_position                                     4     3      1     653
                                              2 BANK0      4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             5     5      0     133
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1213
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     618
                                              6 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      31
                                              2 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      31
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_cmd
   _separa
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd_data
     _lcd_set_position
       _lcd_cmd

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 18 16:28:03 2020

             lcd_data@data 0024                         l63 0199               ___awdiv@sign 002C  
                      l911 01C4                        l917 01CF                        l943 020E  
                      l935 01FB                        l927 01D7                        l929 01E5  
                      l939 0206                        _PR2 0092                        u345 01DA  
                      _ISR 035B                        u365 01E6                        u605 0286  
                      u375 01F2                        u535 0219                        u385 01FC  
                      u625 0297                        u635 02A0                        u707 0245  
                      u555 02C6                        u717 0255                        u565 02E7  
                      u727 0265                        u737 0301                        u747 0344  
                      u757 0355                        u687 015C                        u697 0235  
                      fsr0 0004               ___awmod@sign 0025        lcd_data@high_nibble 0023  
                     ?_ISR 0070                       l1221 02B2                       l1213 029F  
                     l1207 0283                       l1209 0291                       l1217 02AA  
                     l1331 018F                       l1177 02DA                       l1195 0276  
                     l1199 027D                       _PIE1 008C                       i1l56 0367  
                     _PIR1 000C                       _main 013C                       btemp 007E  
                     start 0012                      ??_ISR 0070                      ?_main 0070  
          __end_of___awdiv 0213            __end_of___awmod 02B7                      _ANSEL 0188  
          ___awdiv@divisor 0026                      _T1CON 0010                      _T2CON 0012  
          ___awdiv@counter 002B                      _TMR1H 000F                      _TMR1L 000E  
                    _PORTB 0006                      _PORTC 0007                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
          __end_of_lcd_cmd 035B                      _valor 0040                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 0015  
             __end_of_main 01B8                     ??_main 003E                     _ADCON0 001F  
                   _ADCON1 009F          ?_lcd_set_position 0022                     _ADRESH 001E  
                   _ADRESL 009E                     _CCPR1L 0015           ___awdiv@dividend 0028  
                   _ANSELH 0189         ??_lcd_set_position 0023                     _INTCON 000B  
         __end_of_lcd_data 026A           __end_of_lcd_init 0334                  ??___awdiv 002A  
                ??___awmod 0075           ___awdiv@quotient 002D            ___awmod@divisor 0020  
                   _separa 0021            ___awmod@counter 0024                  ??_lcd_cmd 0020  
                   saved_w 007E    __end_of__initialization 001D             __pcstackCOMMON 0070  
               __pbssBANK0 0040                 __pmaintext 013C                 __pintentry 0004  
                  _CCP1CON 0017                    ?_separa 002F                  ?_lcd_data 0070  
                ?_lcd_init 0070                separa@valor 002F                    ___awdiv 01B8  
                  ___awmod 026A            __size_of_separa 011B                    __ptext1 0021  
                  __ptext2 02B7                    __ptext3 0213                    __ptext4 026A  
                  __ptext5 01B8                    __ptext6 02FB                    __ptext7 0334  
                  __ptext8 035B                    _lcd_cmd 0334               __size_of_ISR 0017  
         ___awmod@dividend 0022                    _valor_f 0076                 ??_lcd_data 0020  
               ??_lcd_init 0022       end_of_initialization 001D                 _separa$483 003C  
               _separa$484 0034  __size_of_lcd_set_position 0044                 lcd_cmd@cmd 0075  
           __end_of_separa 013C        start_initialization 0015                __end_of_ISR 0372  
            separa@centena 0036              separa@unidade 003A         lcd_data@low_nibble 0022  
                 ??_separa 0031                __pbssCOMMON 0076                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of_lcd_data 0057          __size_of_lcd_init 0039  
         _lcd_set_position 02B7                   ?___awdiv 0026                   ?___awmod 0020  
                 ?_lcd_cmd 0070         _periodic_interrupt 0042          interrupt_function 0004  
             separa@dezena 0038               separa@milhar 0032           __size_of___awdiv 005B  
         __size_of___awmod 004D           __size_of_lcd_cmd 0027                   _lcd_data 0213  
                 _lcd_init 02FB              __size_of_main 007C   __end_of_lcd_set_position 02FB  
                 intlevel1 0000        lcd_set_position@pos 0025          lcd_set_position@x 0024  
        lcd_set_position@y 0022  
